name: CD
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java JDK
        uses: actions/setup-java@v3.12.0
        with:
          java-version: '17'
          distribution: 'liberica'
          cache: 'maven'
      - name: Build maven
        run: mvn -B install
      - name: Build docker image
        run: docker build . --file .docker/Dockerfile --build-arg SOURCE_DIR=artiexh-api --tag public.ecr.aws/n8l9j6q1/artiexh-api:${{github.sha}}
      - name: Setup AWS credential
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.KEY_ID}}
          aws-secret-access-key: ${{secrets.ACCESS_KEY}}
          aws-region: ap-southeast-1
      - name: Login aws ecr
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n8l9j6q1
      - name: Publish docker image
        run: docker push public.ecr.aws/n8l9j6q1/artiexh-api:${{github.sha}}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup AWS credential
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.KEY_ID}}
          aws-secret-access-key: ${{secrets.ACCESS_KEY}}
          aws-region: ap-southeast-1
      - name: Fill new image ID ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1.1.3
        with:
          task-definition: .aws/artiexh-api-task-definition.json
          container-name: artiexh-api
          image: public.ecr.aws/n8l9j6q1/artiexh-api:${{github.sha}}

      - name: Deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.11
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: artiexh-api-svc
          cluster: artiexh-dev