spring:
  application:
    name: artiexh-authorization-client
  datasource:
    url: jdbc:mariadb://${DB_URL:localhost:3306}/artiexh_backend
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:013845}
    hikari:
      auto-commit: false
  jpa:
    open-in-view: false
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      database: ${REDIS_DATABASE}
  jackson:
    serialization:
      write-dates-as-timestamps: true
      write-date-timestamps-as-nanoseconds: false
    deserialization:
      read-date-timestamps-as-nanoseconds: false
    default-property-inclusion: non_null
  main:
    allow-circular-references: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${OAUTH2_GOOGLE_CLIENT_ID}
            clientSecret: ${OAUTH2_GOOGLE_CLIENT_SECRET}
            redirectUri: "{baseUrl}/api/v1/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
server:
  error:
    include-message: always
    include-stacktrace: never
    whitelabel:
      enabled: false
springdoc:
  show-actuator: true
  swagger-ui:
    path: /swagger-ui
    disable-swagger-default-url: true
    csrf:
      enabled: true
artiexh:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      issuer: http://artiexh.com/api/
      audiences:
        - http://artiexh.com/
        - http://localhost:8080/
        - http://localhost:3000/
      access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
      refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION}
    recent_oauth2_fail_id:
      expiration: ${CACHE_RECENT_OAUTH2_FAIL_ID_EXPIRE}
